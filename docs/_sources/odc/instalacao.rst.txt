..
    This file is part of Brazil Data Cube Tech Talks.
    Copyright 2020 INPE.

    Brazil Data Cube Tech Talks is free software; you can redistribute it and/or modify it
    under the terms of the MIT License; see LICENSE file for more details.


Instalação
----------


Esta seção apresenta os passos necessários para a instalação do ambiente básico do ODC. Esse processo será realizado com o `Docker <https://docs.docker.com/get-docker/>`_.


.. note::

    Os comandos abaixo foram testados no Linux. Se você estiver utilizando o Microsft Windows, fique atento à possíveis alterações na forma do comando.


Para começar, o primeiro passo a ser realizado é a aquisição dos códigos que serão utilizados. Faça isso utilizando o comando ``git clone`` no repositório `bdc-odc <https://github.com/brazil-data-cube/bdc-odc>` do Brazil Data Cube. O comando completo é apresentado abaixo::

    git clone https://github.com/brazil-data-cube/bdc-odc.git


Após o *download*, acesse o diretório que foi criado::

    cd bdc-odc


Dentro do diretório, faça a execução do *script* ``build-docker.sh``, que fará a geração das imagens do ``ODC-Core`` e também do ``Jupyter-Notebook``::

    ./build-docker.sh

Após executar, ambas as imagens citadas anteriormente deverão estar disponíveis no seu ambiente Docker. Para conferir utilize o comando `docker images`, o resultado deve ser algo parecido com o apresentado abaixo.

.. code-block:: shell

        $ docker images

        REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
        local/odc-jupyter   1.7                 684c49022dd4        5 days ago          1.9GB
        local/odc           1.7                 72408270a63b        5 days ago          1.61GB

Se tudo correu bem você vai ver as mesmas imagens que foram apresentadas. Com este passo feito, pode-se iniciar a execução de ambos os serviços.

Executando os serviços ODC
---------------------------

O primeiro passo será a criação de uma rede docker específica para os serviços que vão ser configurados.

.. code-block:: shell

        $ docker network create bdc-odc-net

A configuração do ODC-Core depende de uma instância do PostgreSQL para o armazenamento dos metadados. Para isso, execute o comando docker apresentado abaixo.

.. NOTE::

    As variáveis de ambiente que estão sendo configuradas no comando, como `POSTGRES_USER`, `POSTGRES_PASSWORD` e `POSTGRES_DB`, podem ser modificadas, caso seja necessário. Recomenda-se a troca da senha do banco.

.. code-block:: shell

        $ docker run -it -d \
                --name bdc-odc-pg \
                --hostname bdc-odc-pg \
                --network bdc-odc-net \
                --restart unless-stopped \
                -v bdc-odc-pgdata_vol:/var/lib/postgresql/data \
                -e PGDATA=/var/lib/postgresql/data \
                -e POSTGRES_DB=opendatacube \
                -e POSTGRES_PASSWORD=change-me \
                -e POSTGRES_USER=opendatacube \
                kartoza/postgis:11.0-2.5

Com o PostgreSQL em execução você pode iniciar a instância do ODC-Core, para isso, utilize o comando abaixo. Caso você tenha alterado as variáveis de ambiente na execução do PostgreSQL, não esqueça de alterar aqui também, com as mesmas informações.

Considere também configurar o volume que está sendo montado para o armazenamento dos dados, para fazer sua alteração, insira no lugar de `/path/to/data-repository` para o local onde você deseja salvar os dados em sua máquina.

.. code-block:: shell

        $ docker run -it -d \
                --name bdc-odc-core \
                --hostname bdc-odc-core \
                --network bdc-odc-net \
                --restart unless-stopped \
                -v /path/to/data-repository:/data \
                -e DB_DATABASE=opendatacube \
                -e DB_HOSTNAME=bdc-odc-pg \
                -e DB_USERNAME=opendatacube \
                -e DB_PASSWORD=change-me \
                -e DB_PORT=5432 \
                local/odc:1.7 /bin/bash

Para finalizar, algumas configurações no ODC-Core serão feitas.

Configurando o ODC-Core
------------------------

O vínculo que foi feito entre os *containers* do ODC-Core e do PostgreSQL não são o suficiente para o correto funcionamento do ODC-Core, é necessário que os *schemas* utilizados sejam criados dentro do banco de dados. Para isso, através da datacube-cli que está disponível dentro do `ODC-Core`, crie os *schemas* no banco de dados.

.. code-block:: shell

        $ docker exec -it bdc-odc-core datacube system init

Para verificar se tudo está certo, liste os produtos que estão cadastrados no sistema. Como até agora só fizemos essa configuração inicial é esperado que o comando não retorne nenhum valor, mas também não apresente nenhum tipo de erro.

.. code-block:: shell

        $ docker exec -it bdc-odc-core datacube product list
